"""Update transfers for purchases

Revision ID: f1234567890a
Revises: e81ea286a998
Create Date: 2025-06-30 18:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f1234567890a'
down_revision = 'e81ea286a998'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new columns to transfer_requests table
    with op.batch_alter_table('transfer_requests') as batch_op:
        # Add new fields for purchase system
        batch_op.add_column(sa.Column('transfer_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('fee_amount', sa.Numeric(precision=20, scale=8), nullable=True, default=0))
        batch_op.add_column(sa.Column('amount_after_fee', sa.Numeric(precision=20, scale=8), nullable=True))
        batch_op.add_column(sa.Column('recipient_wallet', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('admin_wallet_id', sa.String(length=36), nullable=True))
        batch_op.add_column(sa.Column('network', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('admin_bank_account_id', sa.String(length=36), nullable=True))
        batch_op.add_column(sa.Column('payment_method', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        
        # Create foreign key constraints
        batch_op.create_foreign_key(
            'fk_transfer_admin_wallet',
            'admin_wallets',
            ['admin_wallet_id'],
            ['id']
        )
        batch_op.create_foreign_key(
            'fk_transfer_admin_bank_account',
            'admin_bank_accounts',
            ['admin_bank_account_id'],
            ['id']
        )
    
    # Update existing records to have transfer_type
    op.execute("UPDATE transfer_requests SET transfer_type = type WHERE transfer_type IS NULL")
    op.execute("UPDATE transfer_requests SET fee_amount = fee WHERE fee_amount IS NULL")
    op.execute("UPDATE transfer_requests SET amount_after_fee = net_amount WHERE amount_after_fee IS NULL")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    with op.batch_alter_table('transfer_requests') as batch_op:
        # Drop foreign key constraints
        batch_op.drop_constraint('fk_transfer_admin_bank_account', type_='foreignkey')
        batch_op.drop_constraint('fk_transfer_admin_wallet', type_='foreignkey')
        
        # Drop new columns
        batch_op.drop_column('notes')
        batch_op.drop_column('payment_method')
        batch_op.drop_column('admin_bank_account_id')
        batch_op.drop_column('network')
        batch_op.drop_column('admin_wallet_id')
        batch_op.drop_column('recipient_wallet')
        batch_op.drop_column('amount_after_fee')
        batch_op.drop_column('fee_amount')
        batch_op.drop_column('transfer_type')
    
    # ### end Alembic commands ###